Imports Danone.MilkSystem.Business
Imports System.Data

Partial Class lst_custo_financeiro_relatorioold

    Inherits Page

    Private customPage As RK.PageTools.CustomPage

    Protected Sub btn_pesquisa_Click(ByVal sender As Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles btn_pesquisa.Click
        If Page.IsValid Then


            ViewState.Item("nr_ano") = Me.txt_ano.Text.Trim

            loadData()
        End If

    End Sub

    Protected Sub btn_limparFiltros_Click(ByVal sender As Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles btn_limparFiltros.Click

        Response.Redirect("lst_custo_financeiro_relatorio.aspx?st_incluirlog=N")

    End Sub

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        customPage = MenuTools.getInitialContext(HttpContext.Current, "lst_custo_financeiro_relatorio.aspx")

        If Not Page.IsPostBack Then
            'FRAN 08/12/2020 i incluir log 
            If (Request("st_incluirlog") Is Nothing) Then 'se nao tem parametro
                Dim usuariolog As New UsuarioLog
                usuariolog.id_usuario = Session("id_login")
                usuariolog.ds_id_session = Session.SessionID.ToString()
                usuariolog.id_tipo_log = 2 'ACESSO
                usuariolog.id_menu_item = 225
                usuariolog.insertUsuarioLog()
            End If
            'FRAN 08/12/2020  incluir log 

            loadDetails()
        End If


    End Sub


    Private Sub loadDetails()

        Try

            Dim custo As New CustoFinanceiro

            txt_ano.Text = DateTime.Parse(Now).ToString("yyyy")

            Dim dscalculo As DataSet = custo.getDataUltimoCalculoProjetado

            If dscalculo.Tables(0).Rows.Count > 0 Then
                With dscalculo.Tables(0).Rows(0)
                    lbl_calculoprojetado.Text = String.Concat("Execução ", .Item("id_custo_financeiro_calculo_execucao").ToString, " - Ano ", .Item("nr_ano").ToString, " - Data ", Left(.Item("dt_termino_execucao").ToString, 16), " (", .Item("ds_login").ToString, ")")
                    ViewState.Item("id_calculo_execucao_ultima") = .Item("id_custo_financeiro_calculo_execucao")
                    ViewState.Item("nr_ano_ultima_execucao") = .Item("nr_ano")
                End With
            Else
                ViewState.Item("id_calculo_execucao_ultima") = 0
                ViewState.Item("nr_ano_ultima_execucao") = 0
                lbl_calculoprojetado.Text = "Nenhum cálculo projetado foi realizado."
            End If

            custo.nr_ano = txt_ano.Text
            dscalculo = custo.getDataUltimoCalculoProjetado

            If dscalculo.Tables(0).Rows.Count > 0 Then
                With dscalculo.Tables(0).Rows(0)
                    lbl_execucao.Text = String.Concat(.Item("id_custo_financeiro_calculo_execucao").ToString, " - Data ", Left(.Item("dt_termino_execucao").ToString, 16))
                    ViewState.Item("id_calculo_execucao") = .Item("id_custo_financeiro_calculo_execucao")
                End With
            Else
                ViewState.Item("id_calculo_execucao") = 0
                lbl_execucao.Text = String.Empty
            End If



            ViewState.Item("sortExpression") = ""

        Catch ex As Exception
            messageControl.Alert(ex.Message)
        End Try

    End Sub

    Private Sub loadData()

        Try

            Dim custo As New CustoFinanceiro
            custo.nr_ano = txt_ano.Text
            custo.dt_referencia_ini = DateTime.Parse(String.Concat("01/01/", ViewState.Item("nr_ano").ToString)).ToString("dd/MM/yyyy")
            custo.dt_referencia_fim = DateTime.Parse(String.Concat("01/12/", ViewState.Item("nr_ano").ToString)).ToString("dd/MM/yyyy")

            Dim dscustovolume As DataSet = custo.getCustoFinanceiroRelatorioVolume
            Dim dscustopreco As DataSet = custo.getCustoFinanceiroRelatorioPreco
            Dim dscustooutroscustos As DataSet = custo.getCustoFinanceiroRelatorioOutrosCustos

            gridVolume.Visible = True
            gridPreco.Visible = True
            gridOutrosCustos.Visible = True

            gridVolume.DataSource = Helper.getDataView(dscustovolume.Tables(0), ViewState.Item("sortExpression"))
            gridVolume.DataBind()
            gridPreco.DataSource = Helper.getDataView(dscustopreco.Tables(0), ViewState.Item("sortExpression"))
            gridPreco.DataBind()
            gridOutrosCustos.DataSource = Helper.getDataView(dscustooutroscustos.Tables(0), ViewState.Item("sortExpression"))
            gridOutrosCustos.DataBind()



        Catch ex As Exception
            messageControl.Alert(ex.Message)
        End Try

    End Sub




    Protected Sub gridResults_RowDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewRowEventArgs) Handles gridVolume.RowDataBound

        'If (e.Row.RowType = DataControlRowType.Header) Then
        '    Dim lbl_teor_ctm_mensal As Label = CType(e.Row.FindControl("lbl_teor_ctm_mensal"), Label)
        '    Dim lbl_teor_ctm_mensal1 As Label = CType(e.Row.FindControl("lbl_teor_ctm_mensal1"), Label)
        '    Dim lbl_teor_ctm_mensal2 As Label = CType(e.Row.FindControl("lbl_teor_ctm_mensal2"), Label)

        '    Dim lbl_menor_amostra_mes As Label = CType(e.Row.FindControl("lbl_menor_amostra_mes"), Label)

        '    lbl_teor_ctm_mensal.Text = DateTime.Parse(ViewState.Item("txt_dt_coleta_ini")).ToString("MMM").ToUpper
        '    lbl_teor_ctm_mensal1.Text = DateTime.Parse(DateAdd(DateInterval.Month, -1, Convert.ToDateTime(ViewState.Item("txt_dt_coleta_ini")))).ToString("MMM").ToUpper
        '    lbl_teor_ctm_mensal2.Text = DateTime.Parse(DateAdd(DateInterval.Month, -2, Convert.ToDateTime(ViewState.Item("txt_dt_coleta_ini")))).ToString("MMM").ToUpper
        '    lbl_menor_amostra_mes.Text = lbl_teor_ctm_mensal.Text

        'End If

        If (e.Row.RowType <> DataControlRowType.Header _
            And e.Row.RowType <> DataControlRowType.Footer _
            And e.Row.RowType <> DataControlRowType.Pager) Then

            'Dim lbl_nr_teor_ctm As Label = CType(e.Row.FindControl("lbl_nr_teor_ctm"), Label)
            'Dim lbl_nr_teor_ctm1 As Label = CType(e.Row.FindControl("lbl_nr_teor_ctm1"), Label)
            'Dim lbl_nr_teor_ctm2 As Label = CType(e.Row.FindControl("lbl_nr_teor_ctm2"), Label)
            'Dim lbl_menoresalq As Label = CType(e.Row.FindControl("lbl_menoresalq"), Label)
            'Dim nrcomplcbt As Label = CType(e.Row.FindControl("nrcomplcbt"), Label)
            'Dim nrcomplcbt1 As Label = CType(e.Row.FindControl("nrcomplcbt1"), Label)
            'Dim nrcomplcbt2 As Label = CType(e.Row.FindControl("nrcomplcbt2"), Label)
            'Dim nranalisecomplcbt As Label = CType(e.Row.FindControl("nranalisecomplcbt"), Label)
            'Dim nrnaocompl As Integer = 0
            'Dim nr1 As Integer = 0
            'Dim nr2 As Integer = 0

            'If nrcomplcbt.Text = "0" Then
            '    nrnaocompl = nrnaocompl + 1
            'End If
            'If nrcomplcbt1.Text = "0" Then
            '    nrnaocompl = nrnaocompl + 1
            'End If
            'If nrcomplcbt2.Text = "0" Then
            '    nrnaocompl = nrnaocompl + 1
            'End If


            'If (nrnaocompl = 3 And nranalisecomplcbt.Text = "-1") OrElse nrnaocompl = 2 Then
            '    e.Row.BackColor = Drawing.Color.Yellow
            '    e.Row.Cells(2).BackColor = Drawing.Color.Yellow
            '    e.Row.Cells(7).BackColor = Drawing.Color.Yellow
            '    e.Row.Cells(8).BackColor = Drawing.Color.Yellow
            '    e.Row.Cells(9).BackColor = Drawing.Color.Yellow
            '    e.Row.Cells(10).BackColor = Drawing.Color.Yellow
            '    e.Row.Cells(11).BackColor = Drawing.Color.Yellow
            '    e.Row.Cells(12).BackColor = Drawing.Color.Yellow
            '    e.Row.Cells(13).BackColor = Drawing.Color.Yellow
            'End If

            'If Not lbl_nr_teor_ctm.Text.Equals(String.Empty) Then
            '    lbl_nr_teor_ctm.Text = FormatNumber(lbl_nr_teor_ctm.Text, 0).ToString
            '    If nrcomplcbt.Text = "0" Then
            '        e.Row.Cells(11).BackColor = Drawing.Color.Red
            '    End If
            'End If
            'If Not lbl_nr_teor_ctm1.Text.Equals(String.Empty) Then
            '    lbl_nr_teor_ctm1.Text = FormatNumber(lbl_nr_teor_ctm1.Text, 0).ToString
            '    If nrcomplcbt1.Text = "0" Then
            '        e.Row.Cells(9).BackColor = Drawing.Color.Red
            '    End If
            'End If
            'If Not lbl_nr_teor_ctm2.Text.Equals(String.Empty) Then
            '    lbl_nr_teor_ctm2.Text = FormatNumber(lbl_nr_teor_ctm2.Text, 0).ToString
            '    If nrcomplcbt2.Text = "0" Then
            '        e.Row.Cells(7).BackColor = Drawing.Color.Red
            '    End If

            'End If

            'If Not lbl_menoresalq.Text.Equals(String.Empty) Then
            '    lbl_menoresalq.Text = FormatNumber(lbl_menoresalq.Text, 0).ToString
            '    If nranalisecomplcbt.Text = "0" Then
            '        e.Row.Cells(13).BackColor = Drawing.Color.Red
            '        'se tem 3 nao compl e menor analise tbm nao complience
            '        If nrnaocompl = 3 Then
            '            e.Row.BackColor = Drawing.Color.Red
            '            e.Row.ForeColor = Drawing.Color.White
            '            e.Row.Cells(6).BackColor = Drawing.Color.Red
            '            e.Row.Cells(7).BackColor = Drawing.Color.Red
            '            e.Row.Cells(8).BackColor = Drawing.Color.Red
            '            e.Row.Cells(9).BackColor = Drawing.Color.Red
            '            e.Row.Cells(10).BackColor = Drawing.Color.Red
            '            e.Row.Cells(11).BackColor = Drawing.Color.Red
            '            e.Row.Cells(12).BackColor = Drawing.Color.Red
            '            e.Row.Cells(13).BackColor = Drawing.Color.Red
            '            e.Row.Cells(6).ForeColor = Drawing.Color.White
            '            e.Row.Cells(7).ForeColor = Drawing.Color.White
            '            e.Row.Cells(8).ForeColor = Drawing.Color.White
            '            e.Row.Cells(9).ForeColor = Drawing.Color.White
            '            e.Row.Cells(10).ForeColor = Drawing.Color.White
            '            e.Row.Cells(11).ForeColor = Drawing.Color.White
            '            e.Row.Cells(12).ForeColor = Drawing.Color.White
            '            e.Row.Cells(13).ForeColor = Drawing.Color.White

            '        End If
            '    End If
            'End If

        End If
    End Sub


    Protected Sub btn_exportar_Click(ByVal sender As Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles btn_exportar.Click
        If Page.IsValid Then

            Try

                'FRAN ViewState.Item("st_tipo_visao") 08/12/2020 i incluir log 
                Dim usuariolog As New UsuarioLog
                usuariolog.id_usuario = Session("id_login")
                usuariolog.ds_id_session = Session.SessionID.ToString()
                usuariolog.id_tipo_log = 8 'exporta~ção
                usuariolog.id_menu_item = 225
                usuariolog.insertUsuarioLog()
                'FRAN 08/12/2020  incluir log 

                Response.Redirect("frm_custo_financeiro_relatorio_excel.aspx?nr_ano=" + ViewState.Item("txt_ano").ToString() + "&id_excucao=" + ViewState.Item("id_calculo_execucao").ToString())


            Catch ex As Exception
                messageControl.Alert(ex.Message)
            End Try
        End If

    End Sub

    Protected Sub cv_custo_ServerValidate(ByVal source As Object, ByVal args As System.Web.UI.WebControls.ServerValidateEventArgs) Handles cv_custo.ServerValidate
        Try

            Dim lmsg As String = String.Empty
            args.IsValid = True


            'se nao existe execuç~~ao de calculo projetado
            If ViewState.Item("nr_ano_ultima_execucao").ToString = "0" Then
                args.IsValid = False
                lmsg = "Não foi realizada nenhuma execução de cálculo projetado. O relatório não pode ser emitido."
            Else
                'tem calculo projetado mas verifica se para o ano selecionado nao tem calculo execução
                If CInt(ViewState.Item("id_calculo_execucao").ToString) = 0 Then
                    args.IsValid = False
                    lmsg = "O Ano informado não tem cálculo projetado executado. O relatório não pode ser emitido."
                End If

            End If

            If args.IsValid = False Then
                messageControl.Alert(lmsg)

                gridPreco.Visible = False
                gridVolume.Visible = False
                gridOutrosCustos.Visible = False
            End If

        Catch ex As Exception
            messageControl.Alert(ex.Message)
        End Try


    End Sub

    Protected Sub txt_ano_TextChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles txt_ano.TextChanged
        Try

            If txt_ano.Text = String.Empty Then
                ViewState.Item("id_calculo_execucao") = 0
                lbl_execucao.Text = String.Empty

            Else
                Dim custo As New CustoFinanceiro
                custo.nr_ano = txt_ano.Text

                Dim dscalculo As DataSet = custo.getDataUltimoCalculoProjetado

                If dscalculo.Tables(0).Rows.Count > 0 Then
                    With dscalculo.Tables(0).Rows(0)
                        lbl_execucao.Text = String.Concat(.Item("id_custo_financeiro_calculo_execucao").ToString, " - Data ", Left(.Item("dt_termino_execucao").ToString, 16))
                        ViewState.Item("id_calculo_execucao") = .Item("id_custo_financeiro_calculo_execucao")
                    End With
                Else
                    ViewState.Item("id_calculo_execucao") = 0
                    lbl_execucao.Text = String.Empty
                End If
            End If

        Catch ex As Exception
            messageControl.Alert(ex.Message)
        End Try

    End Sub

    Protected Sub gridOutrosCustos_SelectedIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles gridOutrosCustos.SelectedIndexChanged

    End Sub
End Class
